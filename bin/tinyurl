#!/usr/bin/env ruby
require 'net/http'

# ---- FLAGS AND GLOBAL VARS ----

# set this to true if we want to automatically copy the...
# ...correctly spelled word to the clipboard.
# NOTE: Requires the 'xclip' binary on Linux.
$ENABLE_COPY_TO_CLIPBOARD = true

# encode the URL for the shortener API.
ENCODE_URL=URI.encode('http://v.gd/create.php?format=simple&url=')

# ---- INIT LOGIC ----

# if we're enabling the clipboard functionality, require the 'clipboard' gem.
if $ENABLE_COPY_TO_CLIPBOARD
    require 'clipboard'
    # if we're running on Linux, make sure that 'xclip' is available...
    # ...and quit if it isn't since clipboard won't work without it.
    if RUBY_PLATFORM.include?("linux")
        xclip = `which xclip`.strip
        if xclip.empty?
            abort("You need the 'xclip' binary for copy-to-clipboard functionality to work properly under Linux")
        end
    end
end

# if the user doesn't pass us a URL, tell them and quit.
if ARGV.first.strip.empty?
    abort('Please specify a URL to shorten.')
end

# encode the URL specified by the user, removing \r\n at the end.
input_url = URI.encode(ARGV.first.strip)

# generate the full request URL and run it through URI.parse just to be safe.
api_full_url = URI.parse(ENCODE_URL + input_url)

# get the response body (shortened URL) from the shortening service API
tinyurl = Net::HTTP.get_response(api_full_url).body

# if the API gives us back a valid URL,
if tinyurl =~ /^http:\/\/v.gd\/(.*)/
    # if we have copy-to-clipboard functionality enabled,
    if $ENABLE_COPY_TO_CLIPBOARD
        # set the clipboard contents to the tiny URL...
        Clipboard.copy(tinyurl)
        # and display it to the user.
        puts "Copied #{tinyurl} to your clipboard."
        exit(0)
    else
        # if there is no clipboard functionality...
        # ...just display the tiny URL to the user.
        puts tinyurl
        exit(0)
    end
else
    # if the shortening service API doesn't return...
    # ...a valid URL, quit.
    abort("v.gd API returned an error: #{tinyurl}")
end
